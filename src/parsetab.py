
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARROW AS ASIGDIV ASIGMINUS ASIGSUM ASIGTIMES ASSERT ASSIGN ASYNC AWAIT BOOLEAN BREAK CASE CATCH CLASS COMMA CONST CONTINUE DDOTS DIVISION DO DOUBLE_TYPE DYNAMIC ELSE ENUM EQ EQ_V EXPORT EXTENDS FALSE FINALLY FLOAT FOR FUNCTION GT GTE IDENT IF IMPLEMENTS INT INTERFACE INT_TYPE LBRACE LBRACKET LIST LPAREN LT LTE MINUS MINUSMINUS MOD NE NEGATION OR PLUS PLUSPLUS PRINT RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING STRING_TYPE SUPER SWITCH TIMES TRUE TYPEDEF VAR VIR VOID WHILEifstm : IF LPAREN condition RPAREN LBRACE RBRACEcondition : preposition operator prepositioncondition :  preposition operator preposition morecondmorecond : operator preposition\n              | operator preposition morecond\n  operator : EQ\n              | NE\n              | AND\n              | OR\n  preposition : typrepreposition : NEGATION typretypre : STRING\n           | INT\n           | TRUE\n           | FALSE\n           | FLOAT\n           | IDENT\n  '
    
_lr_action_items = {'IF':([0,],[2,]),'$end':([1,23,],[0,-1,]),'LPAREN':([2,],[3,]),'NEGATION':([3,15,16,17,18,19,24,],[7,7,-6,-7,-8,-9,7,]),'STRING':([3,7,15,16,17,18,19,24,],[8,8,8,-6,-7,-8,-9,8,]),'INT':([3,7,15,16,17,18,19,24,],[9,9,9,-6,-7,-8,-9,9,]),'TRUE':([3,7,15,16,17,18,19,24,],[10,10,10,-6,-7,-8,-9,10,]),'FALSE':([3,7,15,16,17,18,19,24,],[11,11,11,-6,-7,-8,-9,11,]),'FLOAT':([3,7,15,16,17,18,19,24,],[12,12,12,-6,-7,-8,-9,12,]),'IDENT':([3,7,15,16,17,18,19,24,],[13,13,13,-6,-7,-8,-9,13,]),'RPAREN':([4,6,8,9,10,11,12,13,20,22,25,26,27,],[14,-10,-12,-13,-14,-15,-16,-17,-11,-2,-3,-4,-5,]),'EQ':([5,6,8,9,10,11,12,13,20,22,26,],[16,-10,-12,-13,-14,-15,-16,-17,-11,16,16,]),'NE':([5,6,8,9,10,11,12,13,20,22,26,],[17,-10,-12,-13,-14,-15,-16,-17,-11,17,17,]),'AND':([5,6,8,9,10,11,12,13,20,22,26,],[18,-10,-12,-13,-14,-15,-16,-17,-11,18,18,]),'OR':([5,6,8,9,10,11,12,13,20,22,26,],[19,-10,-12,-13,-14,-15,-16,-17,-11,19,19,]),'LBRACE':([14,],[21,]),'RBRACE':([21,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ifstm':([0,],[1,]),'condition':([3,],[4,]),'preposition':([3,15,24,],[5,22,26,]),'typre':([3,7,15,24,],[6,20,6,6,]),'operator':([5,22,26,],[15,24,24,]),'morecond':([22,26,],[25,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ifstm","S'",1,None,None,None),
  ('ifstm -> IF LPAREN condition RPAREN LBRACE RBRACE','ifstm',6,'p_ifstm','yacc.py',5),
  ('condition -> preposition operator preposition','condition',3,'p_condition','yacc.py',8),
  ('condition -> preposition operator preposition morecond','condition',4,'p_condition_more','yacc.py',11),
  ('morecond -> operator preposition','morecond',2,'p_morecond','yacc.py',14),
  ('morecond -> operator preposition morecond','morecond',3,'p_morecond','yacc.py',15),
  ('operator -> EQ','operator',1,'p_operator','yacc.py',19),
  ('operator -> NE','operator',1,'p_operator','yacc.py',20),
  ('operator -> AND','operator',1,'p_operator','yacc.py',21),
  ('operator -> OR','operator',1,'p_operator','yacc.py',22),
  ('preposition -> typre','preposition',1,'p_preposition','yacc.py',26),
  ('preposition -> NEGATION typre','preposition',2,'p_preposition_not','yacc.py',29),
  ('typre -> STRING','typre',1,'p_typre','yacc.py',32),
  ('typre -> INT','typre',1,'p_typre','yacc.py',33),
  ('typre -> TRUE','typre',1,'p_typre','yacc.py',34),
  ('typre -> FALSE','typre',1,'p_typre','yacc.py',35),
  ('typre -> FLOAT','typre',1,'p_typre','yacc.py',36),
  ('typre -> IDENT','typre',1,'p_typre','yacc.py',37),
]
